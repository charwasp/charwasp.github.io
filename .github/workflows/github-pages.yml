name: Deploy to pages

on:
  workflow_dispatch: {}
  push:
    branches: [master]
  schedule:
    - cron: '2 * * * *' # every hour

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      has-update: ${{ steps.check.outputs.has-update }}
    steps:
      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Check for updates
        id: check
        shell: bash
        run: |
          set -e
          deployed="$(curl -fsS ${{ steps.pages.outputs.base_url }}/master.zip.sig || true)"
          upstream=$(curl -fsS ${{ secrets.CHARWASP_MANIFEST_URL }} | jq -r '.assets["master.zip"].md5')
          if [[ -z "$deployed" || "$upstream" != "$deployed" ]]; then
            echo '::set-output name=has-update::true'
          else
            echo '::set-output name=has-update::false'
          fi

  build:
    needs: check-updates
    if: needs.check-updates.outputs.has-update == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        id: setup-ruby
        with:
          ruby-version: '3.2' # minify_html=0.15.0 requires < 3.3; see Gemfile
          bundler-cache: true

      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build
        run: bundle exec rake
        env:
          CHARWASP_MANIFEST_URL: ${{ secrets.CHARWASP_MANIFEST_URL }}

      - name: Upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
